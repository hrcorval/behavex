{#
/*
* BehaveX - BDD testing library based on Behave
*/#}

{%- set menu = 'steps' -%}
{%- extends "base.jinja2" -%}
{%- block title-%} Steps {%- endblock -%}
{%- block body -%}


<div id="table_div" >
    <div class="col-sm-4 pull-left">
        <div class="form-group form-group-sm">
            <b>
            <label class="control-label pull-left"
                   style="padding-top: 5px;padding-right:3px;font-size: 12px;">Search</label>
            <input placeholder="step"
                   type="text"
                   class="input-group form-control-static input-search"
                   style="height: 25px"
                   data-search>
            </b>
        </div>
    </div>
     <div class="col-sm-2 pull-left div-select">
        <div class="form-group form-group-sm">
        <b>
            <label class="control-label">
                {{ 'report.filter_status.label'|get_text }}
            </label>
            <select class="select-filter  form-control-static"
                    style="height: 25px"
                    data-select-filter-status>
                <option value="all">all</option>
                <option value="failed">Failed</option>
                <option value="skipped">Not&nbsp;Run</option>
                <option value="passed">Passed</option>

            </select>
        </b>
        </div>
    </div>
    <div class="col-sm-1 pull-left" >
        <div class="form-group form-group-sm">
            <button type="button" class="btn btn-info btn-xs"
                    id="button-reset-filter" data-reset-filter>
                <b>Reset</b>
            </button>
        </div>
    </div>
    <table class="table behavex_letter table-bordered tablesorter" id="tableSteps" >
        <thead>
            <tr class="table-header">
                <th >Step<span class="glyphicon glyphicon-sort btn-xs pull-right" ></span> </th>
                <th class="text-center" style="width: 11%">Appearances <span
                        class="glyphicon glyphicon-sort btn-xs center-block " style="float: right"></span></th>
                <th class="text-center" style="width: 10%">Executions<span
                        class="glyphicon glyphicon-sort btn-xs center-block " style="float: right"></span></th>
                <th class="text-center" style="width: 9%">Avg&nbsp;Time <span
                        class="glyphicon glyphicon-sort btn-xs center-block " style="float: right"></span></th>
                <th class="text-center" style="width: 10%">Total&nbsp;Time<span
                        class="glyphicon glyphicon-sort btn-xs center-block " style="float: right"></span></th>
                <th class="text-center" style="width: 7.5%">Status </th>
            </tr>
        </thead>
        <tbody>
        {%- for step in steps_sorted -%}
            {% set step_selected = steps[step] %}
            {% set letter = step_selected.status|calculate_color %}
            <tr data-quantity="{{ steps[step]['executions'] }}"
                data-average="{{steps[step]['avg'] }}"
                data-total-duration="{{ steps[step]['time'] }}"
                class="behavex_letter tr-progress table_row_{{ step_selected.status|calculate_status }}">
                {% set first_instance = steps[step].steps.keys()[0] %}
                {% set instances = steps[step].steps|count %}
                <td class="{{ letter }}-behavex">
                    {% set has_children = instances > 1 or (instances == 1 and step != first_instance) %}
                    <b> <span  title="{{ step_selected.status|calculate_title_status }}"
                            {%- if not (has_children) -%} style="padding-left: 20px" {%- endif -%}>
                            {{ step|e }}
                    </span></b>
{#                    {% set arguments =  step_selected.steps.keys()[0] %}#}
                    {% if has_children %}
                        <span class="glyphicon glyphicon-menu-right span-behavex pull-left" data-step
                              title="{{ ('commons.expand'|get_text).format('steps') }}"></span>
                        <ul class="list-unstyled table_row_{{ step_selected.status|calculate_status }} ul_border_bottom" >
                            <!-- iteritems has been changed to items -->
                            {% for key, sub_step in steps[step].steps.items() %}
                                <li class=" table_row_{{ sub_step.status|calculate_status }} li_border_bottom" title="{{ sub_step.status|calculate_title_status }}">
                                 {% set current_step = steps[step].steps.keys()[0] %}
                                    {{ key|e }}
                                    </li>
                                {% endfor %}
                            </li>
                        </ul>
                    {% endif %}
                </td>
                <td class="text-center">&nbsp;{{ steps[step]['appearances'] }}</td>
                <td class="text-center">&nbsp;{{ steps[step]['executions'] }}</td>
                <td class="text-center" >{{ '%.2f s' % (steps[step]['avg']) }}</td>
                <td class="text-center">{{ '%.2f s' % steps[step]['time'] }}</td>
                <td class="text-center">
                    <div class="progress  progress-expand-steps">
                        {% set total_ = step_selected.status|count %}
                        {% set status = step_selected.status|count_by_status('first_value')%}
                        {{ total_|create_progress_html(*status) }}
                    </div>
               </td>
            </tr>
        {%- endfor-%}
    </table>
    <table class="table behavex_letter " >
        <tr class="behavex-row-total behavex_letter tr-progress text-center"  style="font-weight: 700">
            <td>
                 <span class="behavex-span-totals pull-left">
                                  <b>  Step definitions: {{ total['definitions'] }}</b>
                                </span>

            </td>
            <td>
                {{ total['appearances'] }}
            </td>
            <td>
                {{ total['executions'] }}
            </td>
            <td></td><td></td>
            <td>
            </td>
        </tr>
    </table>
</div>
{%- endblock -%}
{%- block pre_load -%}
    var ths = $('#tableSteps tr:first th');
    var tds = $($('table')[1]).find('tr:first td');
    for(var i=0;i < ths.length;i++){
        var td = $(tds[i]);
        var th = $(ths[i]);
        td.css('width', th.css('width'));
    }
{%- endblock  -%}
{%- block javascript -%}
    {{ super() }}
    $("#tableSteps").tablesorter();
    $('[data-reset-filter]').click(function(){
        show_all_tr();
        $('[data-search]').val('');
        $('[data-select-filter-status]').val('all');
    });

     $('[data-step]').click(function(e){
            e.stopPropagation();
            var element = $(this);
            ul = element.parent().find('ul');
            if (element.hasClass('glyphicon-menu-right')) {
                ul.css('display', 'block')
                element.removeClass('glyphicon-menu-right');
                element.addClass('glyphicon-menu-down');
                element.attr('title', "{{ ('commons.collapse'|get_text).format('scenario')}}");
            } else {
                ul.css('display', 'None')
                element.removeClass('glyphicon-menu-down');
                element.addClass('glyphicon-menu-right');
                element.attr('title', "{{ ('commons.expand'|get_text).format('scenario')}}");
            }

        });

    function show_step(value){
        value = value.replace(/^\s+|\s+$/g, '');
        $("tr[data-quantity]").each(function(){
            tr = $(this);
            span_first = tr.find('td:first').find('span:first');
            if (span_first.text().replace(/^\s+|\s+$/g, '') != value){
                tr.css('display', 'None');
            } else {
                tr.css('display', '');
            }
        });
    }

    var lst_tr = $("tr[data-quantity]");

    var search = $('[data-search]');
    search.autocomplete({
        source: lst_tr.map(function() {
            return $(this).find('td:first').find('span:first').text();
        }).get(),
        select: function(event, ui){
                show_step(ui.item.value);
        }
    });

    $('[data-select-filter-status]').change(function(){
            var selected = $(this).val();
            show_all_tr();
            if (selected != 'all') {
              filter_status(selected);
            }
        });
    function show_all_tr(){
        $("tr[data-quantity]").each(function(){
                $(this).css('display', '');
        });
    }

    function filter_status(status){
        all_status = Array('passed', 'failed', 'skipped');
        for (var index in all_status) {
            if (all_status[index] == status) {
                var t=0;
                /*$('tr.table_row_' + status).css('display', '');*/
            } else {
                $('tr.table_row_' + all_status[index]).css('display', 'None');
            }
        }
    }

{%- endblock -%}
